name: Rust Release and Docker Image

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Build Rust Binaries for Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OpenSSL dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install cross
        uses: taiki-e/install-action@cross

      - name: Build with cross
        run: |
          cross build --release --target ${{ matrix.target }}
          mkdir -p dist
          cp target/${{ matrix.target }}/release/kube-eye-export-server dist/kube-eye-export-server-${{ matrix.target }}

      - name: Upload Linux binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/kube-eye-export-server-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}

  build-macos:
    name: Build for macOS M1
    runs-on: macos-13
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OpenSSL (macOS)
        run: |
          brew install pkg-config openssl@3

      - name: Set OPENSSL_DIR
        run: echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV

      - name: Install Rust target
        run: rustup target add aarch64-apple-darwin

      - name: Build for macOS M1
        run: |
          cargo build --release --target aarch64-apple-darwin
          mkdir -p dist
          cp target/aarch64-apple-darwin/release/kube-eye-export-server dist/kube-eye-export-server-aarch64-apple-darwin

      - name: Upload macOS binary to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/kube-eye-export-server-aarch64-apple-darwin
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_TOKEN }}
